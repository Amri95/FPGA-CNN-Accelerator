// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=87.500000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=28,HLS_SYN_FF=3230,HLS_SYN_LUT=4094}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 44'b1;
parameter    ap_ST_st2_fsm_1 = 44'b10;
parameter    ap_ST_st3_fsm_2 = 44'b100;
parameter    ap_ST_st4_fsm_3 = 44'b1000;
parameter    ap_ST_st5_fsm_4 = 44'b10000;
parameter    ap_ST_st6_fsm_5 = 44'b100000;
parameter    ap_ST_st7_fsm_6 = 44'b1000000;
parameter    ap_ST_st8_fsm_7 = 44'b10000000;
parameter    ap_ST_st9_fsm_8 = 44'b100000000;
parameter    ap_ST_st10_fsm_9 = 44'b1000000000;
parameter    ap_ST_st11_fsm_10 = 44'b10000000000;
parameter    ap_ST_st12_fsm_11 = 44'b100000000000;
parameter    ap_ST_st13_fsm_12 = 44'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 44'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 44'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 44'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 44'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 44'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 44'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 44'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 44'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 44'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 44'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 44'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 44'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 44'b10000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_26 = 44'b100000000000000000000000000;
parameter    ap_ST_pp0_stg1_fsm_27 = 44'b1000000000000000000000000000;
parameter    ap_ST_st38_fsm_28 = 44'b10000000000000000000000000000;
parameter    ap_ST_st39_fsm_29 = 44'b100000000000000000000000000000;
parameter    ap_ST_st40_fsm_30 = 44'b1000000000000000000000000000000;
parameter    ap_ST_st41_fsm_31 = 44'b10000000000000000000000000000000;
parameter    ap_ST_st42_fsm_32 = 44'b100000000000000000000000000000000;
parameter    ap_ST_st43_fsm_33 = 44'b1000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_34 = 44'b10000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_35 = 44'b100000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_36 = 44'b1000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_37 = 44'b10000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_38 = 44'b100000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_39 = 44'b1000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_40 = 44'b10000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_41 = 44'b100000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_42 = 44'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_43 = 44'b10000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv48_0 = 48'b000000000000000000000000000000000000000000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv48_1 = 48'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_4 = 5'b100;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_61;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [15:0] CHout_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [7:0] Sx_V;
wire   [7:0] Sy_V;
wire   [0:0] mode_V;
wire   [0:0] relu_en_V;
wire   [31:0] feature_in;
wire   [31:0] W;
wire   [31:0] bias;
wire   [31:0] feature_out;
reg    gmem_blk_n_AR;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_27;
reg    ap_sig_139;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg   [0:0] exitcond2_reg_1740;
reg    gmem_blk_n_R;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_26;
reg    ap_sig_162;
reg    ap_reg_ppiten_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4;
reg    ap_sig_cseq_ST_st39_fsm_29;
reg    ap_sig_183;
reg    ap_sig_cseq_ST_st46_fsm_36;
reg    ap_sig_191;
reg    gmem_blk_n_AW;
reg    ap_sig_cseq_ST_st47_fsm_37;
reg    ap_sig_200;
reg    gmem_blk_n_W;
reg    ap_sig_cseq_ST_st48_fsm_38;
reg    ap_sig_208;
reg    gmem_blk_n_B;
reg    ap_sig_cseq_ST_st53_fsm_43;
reg    ap_sig_216;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [15:0] i_op_assign_reg_374;
reg   [31:0] r_V_16_reg_385;
reg   [31:0] sum_2_reg_396;
reg   [31:0] reg_440;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_sig_345;
reg   [0:0] relu_en_V_read_reg_1394;
reg   [7:0] Sy_V_read_reg_1399;
reg   [7:0] Sx_V_read_reg_1404;
reg   [7:0] Ky_V_read_reg_1409;
reg   [7:0] Kx_V_read_reg_1414;
reg   [15:0] CHout_V_read_reg_1420;
reg   [15:0] Win_V_read_reg_1426;
reg   [15:0] CHin_V_read_reg_1431;
reg   [29:0] tmp_1_reg_1438;
reg   [29:0] tmp_5_reg_1443;
reg   [29:0] tmp_10_reg_1448;
reg   [29:0] tmp_16_reg_1453;
wire   [7:0] p_s_fu_602_p3;
reg   [7:0] p_s_reg_1458;
wire   [7:0] p_1_fu_610_p3;
reg   [7:0] p_1_reg_1463;
wire   [16:0] lhs_V_2_cast_fu_630_p1;
reg   [16:0] lhs_V_2_cast_reg_1468;
wire   [16:0] lhs_V_4_cast_fu_680_p1;
reg   [16:0] lhs_V_4_cast_reg_1483;
wire   [48:0] tmp_10_cast_fu_718_p1;
reg   [48:0] tmp_10_cast_reg_1499;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_404;
wire    grp_fu_662_ap_done;
wire    grp_fu_712_ap_done;
wire   [30:0] tmp_16_cast_fu_721_p1;
reg   [30:0] tmp_16_cast_reg_1504;
wire   [48:0] tmp_17_cast_fu_724_p1;
reg   [48:0] tmp_17_cast_reg_1509;
wire   [47:0] tmp_21_cast_fu_727_p1;
reg   [47:0] tmp_21_cast_reg_1514;
wire   [15:0] Wout_V_fu_734_p2;
reg   [15:0] Wout_V_reg_1519;
wire   [15:0] tmp_9_fu_750_p1;
reg   [15:0] tmp_9_reg_1524;
wire   [15:0] tmp_s_fu_753_p1;
reg   [15:0] tmp_s_reg_1529;
wire   [31:0] rhs_V_4_cast_fu_756_p1;
reg   [31:0] rhs_V_4_cast_reg_1534;
wire   [31:0] rhs_V_1_fu_760_p1;
reg   [31:0] rhs_V_1_reg_1540;
wire   [15:0] tmp_14_fu_763_p1;
reg   [15:0] tmp_14_reg_1547;
wire   [15:0] tmp_15_fu_766_p1;
reg   [15:0] tmp_15_reg_1553;
wire   [47:0] rhs_V_2_fu_769_p1;
reg   [47:0] rhs_V_2_reg_1558;
wire   [15:0] rhs_V_16_cast_fu_772_p1;
reg   [15:0] rhs_V_16_cast_reg_1563;
wire   [47:0] rhs_V_12_cast_fu_775_p1;
reg   [47:0] rhs_V_12_cast_reg_1568;
wire   [23:0] rhs_V_13_cast_fu_778_p1;
reg   [23:0] rhs_V_13_cast_reg_1575;
wire   [31:0] rhs_V_14_cast_fu_781_p1;
reg   [31:0] rhs_V_14_cast_reg_1580;
wire   [15:0] bound_fu_787_p2;
reg   [15:0] bound_reg_1586;
wire   [31:0] bound4_fu_797_p2;
reg   [31:0] bound4_reg_1591;
wire   [47:0] bound1_fu_807_p2;
reg   [47:0] bound1_reg_1596;
wire   [0:0] exitcond_mid_fu_813_p2;
reg   [0:0] exitcond_mid_reg_1601;
wire   [47:0] r_V_10_fu_826_p2;
reg   [47:0] r_V_10_reg_1606;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_458;
wire   [47:0] indvar_flatten_next1_fu_836_p2;
reg   [47:0] indvar_flatten_next1_reg_1614;
wire   [0:0] exitcond_flatten2_fu_842_p2;
reg   [0:0] exitcond_flatten2_reg_1619;
wire   [0:0] exitcond_flatten1_fu_831_p2;
wire   [0:0] exitcond_mid1_fu_852_p3;
reg   [0:0] exitcond_mid1_reg_1628;
wire  signed [15:0] i_op_assign_12_mid2_fu_865_p3;
reg  signed [15:0] i_op_assign_12_mid2_reg_1635;
wire  signed [15:0] grp_fu_1388_p3;
reg  signed [15:0] tmp_24_reg_1641;
wire   [15:0] tmp_10_mid2_v_fu_886_p3;
reg   [15:0] tmp_10_mid2_v_reg_1646;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_480;
wire   [30:0] tmp_10_mid2_cast_fu_893_p1;
reg   [30:0] tmp_10_mid2_cast_reg_1651;
wire   [31:0] tmp_10_cast_mid2_fu_897_p1;
reg   [31:0] tmp_10_cast_mid2_reg_1656;
wire   [15:0] tmp_21_mid2_fu_932_p2;
reg   [15:0] tmp_21_mid2_reg_1662;
wire   [47:0] r_V_10_mid2_fu_942_p3;
reg   [47:0] r_V_10_mid2_reg_1668;
wire   [15:0] i_op_assign_10_mid2_fu_949_p3;
reg   [15:0] i_op_assign_10_mid2_reg_1673;
wire   [31:0] i_op_assign_12_cast7_fu_956_p1;
reg   [31:0] i_op_assign_12_cast7_reg_1678;
wire   [0:0] exitcond_flatten_fu_983_p2;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_501;
wire   [15:0] indvar_flatten_next_fu_988_p2;
reg   [15:0] indvar_flatten_next_reg_1687;
wire   [7:0] i_op_assign_13_mid2_fu_999_p3;
reg   [7:0] i_op_assign_13_mid2_reg_1692;
wire   [7:0] r_V_17_mid2_v_v_v_fu_1046_p3;
reg   [7:0] r_V_17_mid2_v_v_v_reg_1697;
wire   [0:0] brmerge_fu_1109_p2;
wire   [0:0] tmp_33_fu_1123_p2;
wire  signed [47:0] grp_fu_1369_p3;
reg  signed [47:0] r_V_12_reg_1710;
wire   [47:0] tmp1_fu_1135_p2;
reg   [47:0] tmp1_reg_1715;
wire   [30:0] bias6_sum_fu_1140_p2;
reg   [30:0] bias6_sum_reg_1720;
reg   [31:0] gmem_addr_1_reg_1725;
wire   [15:0] j_fu_1171_p2;
reg   [15:0] j_reg_1730;
wire   [31:0] indvar_flatten_next8_fu_1182_p3;
reg   [31:0] indvar_flatten_next8_reg_1735;
wire   [0:0] exitcond2_fu_1189_p2;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1740_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_1740_pp0_iter2;
wire   [15:0] cin_fu_1194_p2;
reg   [15:0] cin_reg_1744;
reg   [31:0] gmem_addr_2_reg_1749;
wire   [31:0] next_mul_fu_1224_p2;
reg   [31:0] next_mul_reg_1755;
reg    ap_sig_557;
reg   [31:0] gmem_addr_3_reg_1760;
reg   [31:0] gmem_addr_3_read_reg_1766;
wire   [31:0] grp_fu_423_p2;
wire   [7:0] jj_fu_1262_p2;
reg    ap_sig_cseq_ST_st38_fsm_28;
reg    ap_sig_586;
wire   [31:0] sum_4_fu_1324_p3;
reg   [31:0] sum_4_reg_1787;
reg    ap_sig_ioackin_gmem_AWREADY;
reg   [47:0] indvar_flatten1_reg_271;
reg   [15:0] i_op_assign_s_reg_282;
reg   [31:0] indvar_flatten7_reg_294;
reg  signed [15:0] i_op_assign_1_reg_306;
reg   [15:0] i_op_assign_2_reg_318;
reg   [15:0] indvar_flatten_reg_329;
reg   [7:0] i_op_assign_3_reg_340;
reg   [31:0] sum_1_reg_351;
reg   [7:0] i_op_assign_4_reg_363;
reg   [15:0] i_op_assign_phi_fu_378_p4;
reg   [31:0] r_V_16_phi_fu_389_p4;
reg   [31:0] sum_3_reg_407;
wire   [63:0] feature_out8_sum_cast_fu_1161_p1;
wire  signed [63:0] feature_in2_sum9_cast_fu_1214_p1;
wire   [63:0] W4_sum_cast_fu_1252_p1;
wire   [63:0] bias6_sum_cast_fu_1267_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_sig_ioackin_gmem_WREADY;
reg   [31:0] grp_fu_423_p0;
reg   [31:0] grp_fu_423_p1;
wire   [31:0] tp_fu_429_p2;
wire   [8:0] lhs_V_cast_fu_486_p1;
wire   [8:0] r_V_fu_490_p2;
wire   [8:0] p_neg9_fu_504_p2;
wire   [7:0] tmp_2_fu_510_p4;
wire   [0:0] tmp_17_fu_496_p3;
wire   [7:0] tmp_3_fu_520_p2;
wire   [7:0] tmp_6_fu_526_p4;
wire   [8:0] lhs_V_1_cast_fu_544_p1;
wire   [8:0] r_V_1_fu_548_p2;
wire   [8:0] p_neg_fu_562_p2;
wire   [7:0] tmp_4_fu_568_p4;
wire   [0:0] tmp_20_fu_554_p3;
wire   [7:0] tmp_8_fu_578_p2;
wire   [7:0] tmp_11_fu_584_p4;
wire   [7:0] pad_x_V_fu_536_p3;
wire   [7:0] pad_y_V_fu_594_p3;
wire   [8:0] r_V_2_fu_618_p3;
wire   [16:0] r_V_2_cast_fu_626_p1;
wire   [16:0] r_V_3_fu_634_p2;
wire   [17:0] r_V_3_cast_fu_640_p1;
wire   [17:0] rhs_V_2_cast_fu_644_p1;
wire   [17:0] r_V_4_fu_648_p2;
wire  signed [18:0] grp_fu_662_p0;
wire   [8:0] grp_fu_662_p1;
wire   [8:0] r_V_6_fu_668_p3;
wire   [16:0] r_V_6_cast_fu_676_p1;
wire   [16:0] r_V_7_fu_684_p2;
wire   [17:0] r_V_7_cast_fu_690_p1;
wire   [17:0] rhs_V_5_cast_fu_694_p1;
wire   [17:0] r_V_8_fu_698_p2;
wire  signed [18:0] grp_fu_712_p0;
wire   [8:0] grp_fu_712_p1;
wire   [18:0] grp_fu_662_p2;
wire   [15:0] tmp_21_fu_730_p1;
wire   [18:0] grp_fu_712_p2;
wire   [15:0] tmp_26_fu_740_p1;
wire   [7:0] bound_fu_787_p0;
wire   [7:0] bound_fu_787_p1;
wire   [15:0] tmp_7_fu_744_p2;
wire   [15:0] bound4_fu_797_p0;
wire   [15:0] bound4_fu_797_p1;
wire   [15:0] bound1_fu_807_p0;
wire   [31:0] bound1_fu_807_p1;
wire   [31:0] r_V_9_fu_1332_p2;
wire   [31:0] r_V_10_fu_826_p0;
wire   [15:0] r_V_10_fu_826_p1;
wire   [0:0] exitcond_fu_847_p2;
wire   [0:0] tmp_31_fu_859_p2;
wire   [15:0] cout_fu_880_p2;
wire  signed [15:0] tmp_34_fu_1338_p2;
wire   [15:0] i_op_assign_10_mid_fu_873_p3;
(* use_dsp48 = "no" *) wire  signed [15:0] i_fu_913_p2;
wire   [31:0] r_V_9_mid1_fu_1382_p2;
wire  signed [15:0] tmp_20_mid1_fu_1363_p2;
wire   [15:0] tmp_21_mid227_v_fu_901_p3;
wire   [15:0] tmp_21_mid2_v_fu_926_p3;
wire   [31:0] r_V_10_mid1_fu_937_p0;
wire   [15:0] r_V_10_mid1_fu_937_p1;
wire   [47:0] r_V_10_mid1_fu_937_p2;
wire   [47:0] r_V_10_mid_fu_907_p3;
wire   [15:0] tmp_18_fu_959_p1;
wire   [15:0] h_V_fu_963_p2;
wire  signed [16:0] lhs_V_7_cast_fu_968_p1;
wire   [0:0] slt_fu_972_p2;
wire   [0:0] exitcond1_fu_994_p2;
wire   [7:0] ii_fu_1007_p2;
wire   [15:0] tmp_18_mid1_fu_1013_p1;
wire   [15:0] h_V_mid1_fu_1017_p2;
wire  signed [15:0] h_V_mid2_fu_1022_p3;
wire  signed [31:0] r_V_12_mid2_v_v_fu_1344_p2;
wire   [15:0] r_V_12_mid2_fu_1041_p0;
wire  signed [31:0] r_V_12_mid2_fu_1041_p1;
wire   [7:0] r_V_17_mid2_v_v_fu_1058_p0;
wire   [7:0] r_V_17_mid2_v_v_fu_1058_p1;
wire   [15:0] r_V_17_mid2_v_v_fu_1058_p2;
wire  signed [16:0] lhs_V_7_cast_mid1_fu_1030_p1;
wire   [0:0] slt1_fu_1067_p2;
wire   [0:0] rev1_fu_1072_p2;
wire   [0:0] rev_fu_977_p2;
wire   [15:0] tmp_27_fu_1086_p1;
(* use_dsp48 = "no" *) wire  signed [15:0] w_V_fu_1090_p2;
wire   [15:0] tmp_28_fu_1095_p2;
wire   [0:0] tmp_38_fu_1101_p3;
wire   [0:0] tmp_31_not_mid2_fu_1078_p3;
wire  signed [16:0] lhs_V_8_cast_fu_1119_p1;
wire   [31:0] grp_fu_1355_p3;
wire   [31:0] tmp1_fu_1135_p0;
wire   [15:0] tmp1_fu_1135_p1;
wire   [31:0] grp_fu_1376_p3;
wire   [47:0] tmp3_cast_fu_1144_p1;
wire   [47:0] tmp_19_fu_1147_p2;
wire   [48:0] tmp_19_cast_cast_fu_1152_p1;
wire   [48:0] feature_out8_sum_fu_1156_p2;
wire   [31:0] indvar_flatten7_op_fu_1176_p2;
wire   [47:0] rhs_V_11_cast_fu_1200_p1;
(* use_dsp48 = "no" *) wire   [47:0] r_V_15_fu_1204_p2;
wire   [47:0] feature_in2_sum9_fu_1209_p2;
wire   [31:0] tmp2_fu_1229_p2;
wire   [47:0] tmp2_cast_fu_1234_p1;
wire   [47:0] tmp_37_fu_1238_p2;
wire   [48:0] tmp_39_cast_cast_fu_1243_p1;
wire   [48:0] W4_sum_fu_1247_p2;
wire   [31:0] sum_5_to_int_fu_1277_p1;
wire   [7:0] tmp_25_fu_1281_p4;
wire   [22:0] tmp_35_fu_1291_p1;
wire   [0:0] notrhs_fu_1301_p2;
wire   [0:0] notlhs_fu_1295_p2;
wire   [0:0] tmp_29_fu_1307_p2;
wire   [0:0] tmp_30_fu_434_p2;
wire   [0:0] rhs_V_fu_1313_p2;
wire   [0:0] r_V_5_fu_1319_p2;
wire   [15:0] r_V_9_fu_1332_p0;
wire   [15:0] r_V_9_fu_1332_p1;
wire   [7:0] tmp_34_fu_1338_p0;
wire   [15:0] r_V_12_mid2_v_v_fu_1344_p0;
wire   [15:0] r_V_17_mid2_fu_1350_p0;
wire   [15:0] r_V_17_mid2_fu_1350_p1;
wire   [7:0] grp_fu_1355_p0;
wire   [15:0] grp_fu_1355_p1;
wire   [31:0] r_V_17_mid2_fu_1350_p2;
wire   [7:0] tmp_20_mid1_fu_1363_p1;
wire   [15:0] grp_fu_1369_p1;
wire   [47:0] grp_fu_1369_p2;
wire   [15:0] grp_fu_1376_p0;
wire   [15:0] grp_fu_1376_p1;
wire   [15:0] grp_fu_1376_p2;
wire   [15:0] r_V_9_mid1_fu_1382_p0;
wire   [15:0] r_V_9_mid1_fu_1382_p1;
wire  signed [15:0] grp_fu_1388_p0;
wire   [7:0] grp_fu_1388_p1;
wire   [7:0] grp_fu_1388_p2;
reg    grp_fu_662_ap_start;
reg    grp_fu_712_ap_start;
reg   [43:0] ap_NS_fsm;
wire   [47:0] bound1_fu_807_p00;
wire   [47:0] bound1_fu_807_p10;
wire   [31:0] bound4_fu_797_p00;
wire   [31:0] bound4_fu_797_p10;
wire   [15:0] bound_fu_787_p00;
wire   [15:0] bound_fu_787_p10;
wire   [23:0] grp_fu_1355_p00;
wire   [18:0] grp_fu_662_p10;
wire   [18:0] grp_fu_712_p10;
wire   [47:0] r_V_10_fu_826_p00;
wire   [47:0] r_V_10_mid1_fu_937_p00;
wire   [31:0] r_V_17_mid2_fu_1350_p10;
wire   [15:0] r_V_17_mid2_v_v_fu_1058_p10;
wire   [31:0] r_V_9_fu_1332_p00;
wire   [31:0] r_V_9_mid1_fu_1382_p00;
wire   [47:0] tmp1_fu_1135_p00;
reg    ap_sig_659;
reg    ap_sig_670;

// power-on initialization
initial begin
#0 ap_CS_fsm = 44'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .CHout_V(CHout_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .Sx_V(Sx_V),
    .Sy_V(Sy_V),
    .mode_V(mode_V),
    .relu_en_V(relu_en_V),
    .feature_in(feature_in),
    .W(W),
    .bias(bias),
    .feature_out(feature_out)
);

Conv_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_1),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_1_reg_1725),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_1),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(sum_4_reg_1787),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Conv_fadd_32ns_32ns_32_1_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fadd_32ns_32ns_32_1_full_dsp_U0(
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .dout(grp_fu_423_p2)
);

Conv_fmul_32ns_32ns_32_1_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fmul_32ns_32ns_32_1_max_dsp_U1(
    .din0(reg_440),
    .din1(gmem_addr_3_read_reg_1766),
    .dout(tp_fu_429_p2)
);

Conv_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Conv_fcmp_32ns_32ns_1_1_U2(
    .din0(grp_fu_423_p2),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_30_fu_434_p2)
);

Conv_sdiv_19s_9ns_19_23_seq #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
Conv_sdiv_19s_9ns_19_23_seq_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_662_ap_start),
    .done(grp_fu_662_ap_done),
    .din0(grp_fu_662_p0),
    .din1(grp_fu_662_p1),
    .ce(1'b1),
    .dout(grp_fu_662_p2)
);

Conv_sdiv_19s_9ns_19_23_seq #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
Conv_sdiv_19s_9ns_19_23_seq_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_712_ap_start),
    .done(grp_fu_712_ap_done),
    .din0(grp_fu_712_p0),
    .din1(grp_fu_712_p1),
    .ce(1'b1),
    .dout(grp_fu_712_p2)
);

Conv_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16ns_32_1_U5(
    .din0(r_V_9_fu_1332_p0),
    .din1(r_V_9_fu_1332_p1),
    .dout(r_V_9_fu_1332_p2)
);

Conv_mul_mul_8ns_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
Conv_mul_mul_8ns_16s_16_1_U6(
    .din0(tmp_34_fu_1338_p0),
    .din1(i_op_assign_1_reg_306),
    .dout(tmp_34_fu_1338_p2)
);

Conv_mul_mul_16ns_16s_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16s_32_1_U7(
    .din0(r_V_12_mid2_v_v_fu_1344_p0),
    .din1(h_V_mid2_fu_1022_p3),
    .dout(r_V_12_mid2_v_v_fu_1344_p2)
);

Conv_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16ns_32_1_U8(
    .din0(r_V_17_mid2_fu_1350_p0),
    .din1(r_V_17_mid2_fu_1350_p1),
    .dout(r_V_17_mid2_fu_1350_p2)
);

Conv_mac_muladd_8ns_16ns_32ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_mac_muladd_8ns_16ns_32ns_32_1_U9(
    .din0(grp_fu_1355_p0),
    .din1(grp_fu_1355_p1),
    .din2(r_V_17_mid2_fu_1350_p2),
    .dout(grp_fu_1355_p3)
);

Conv_mul_mul_16s_8ns_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Conv_mul_mul_16s_8ns_16_1_U10(
    .din0(i_fu_913_p2),
    .din1(tmp_20_mid1_fu_1363_p1),
    .dout(tmp_20_mid1_fu_1363_p2)
);

Conv_mac_muladd_16s_16ns_48ns_48_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Conv_mac_muladd_16s_16ns_48ns_48_1_U11(
    .din0(w_V_fu_1090_p2),
    .din1(grp_fu_1369_p1),
    .din2(grp_fu_1369_p2),
    .dout(grp_fu_1369_p3)
);

Conv_mac_muladd_16ns_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mac_muladd_16ns_16ns_16ns_32_1_U12(
    .din0(grp_fu_1376_p0),
    .din1(grp_fu_1376_p1),
    .din2(grp_fu_1376_p2),
    .dout(grp_fu_1376_p3)
);

Conv_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16ns_32_1_U13(
    .din0(r_V_9_mid1_fu_1382_p0),
    .din1(r_V_9_mid1_fu_1382_p1),
    .dout(r_V_9_mid1_fu_1382_p2)
);

Conv_mac_mul_sub_16s_8ns_8ns_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Conv_mac_mul_sub_16s_8ns_8ns_16_1_U14(
    .din0(grp_fu_1388_p0),
    .din1(grp_fu_1388_p1),
    .din2(grp_fu_1388_p2),
    .dout(grp_fu_1388_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557))) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_29) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345))))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == gmem_ARREADY) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b1 == gmem_ARREADY) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_29) & (1'b1 == gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st47_fsm_37)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if ((1'b1 == gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st48_fsm_38)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if ((1'b1 == gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~(exitcond2_reg_1740 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
            ap_reg_ppiten_pp0_it4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it3) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if ((((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~(1'b1 == ap_reg_ppiten_pp0_it3)))) begin
            ap_reg_ppiten_pp0_it5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        i_op_assign_1_reg_306 <= i_op_assign_10_mid2_reg_1673;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        i_op_assign_1_reg_306 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        i_op_assign_2_reg_318 <= j_reg_1730;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        i_op_assign_2_reg_318 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_28)) begin
        i_op_assign_3_reg_340 <= r_V_17_mid2_v_v_v_reg_1697;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        i_op_assign_3_reg_340 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_28)) begin
        i_op_assign_4_reg_363 <= jj_fu_1262_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        i_op_assign_4_reg_363 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
        i_op_assign_reg_374 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)))) begin
        i_op_assign_reg_374 <= cin_reg_1744;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        i_op_assign_s_reg_282 <= tmp_10_mid2_v_reg_1646;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        i_op_assign_s_reg_282 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        indvar_flatten1_reg_271 <= indvar_flatten_next1_reg_1614;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        indvar_flatten1_reg_271 <= ap_const_lv48_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        indvar_flatten7_reg_294 <= indvar_flatten_next8_reg_1735;
    end else if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        indvar_flatten7_reg_294 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_28)) begin
        indvar_flatten_reg_329 <= indvar_flatten_next_reg_1687;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        indvar_flatten_reg_329 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
        r_V_16_reg_385 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter1))) begin
        r_V_16_reg_385 <= next_mul_reg_1755;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_28)) begin
        sum_1_reg_351 <= sum_3_reg_407;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        sum_1_reg_351 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
        sum_2_reg_396 <= sum_1_reg_351;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b1 == ap_reg_ppiten_pp0_it5) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)))) begin
        sum_2_reg_396 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~(1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4))) begin
        sum_3_reg_407 <= sum_2_reg_396;
    end else if ((((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & ~(1'b0 == brmerge_fu_1109_p2)) | ((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & (1'b0 == tmp_33_fu_1123_p2)))) begin
        sum_3_reg_407 <= sum_1_reg_351;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        CHin_V_read_reg_1431 <= CHin_V;
        CHout_V_read_reg_1420 <= CHout_V;
        Kx_V_read_reg_1414 <= Kx_V;
        Ky_V_read_reg_1409 <= Ky_V;
        Sx_V_read_reg_1404 <= Sx_V;
        Sy_V_read_reg_1399 <= Sy_V;
        Win_V_read_reg_1426 <= Win_V;
        lhs_V_2_cast_reg_1468[15 : 0] <= lhs_V_2_cast_fu_630_p1[15 : 0];
        lhs_V_4_cast_reg_1483[15 : 0] <= lhs_V_4_cast_fu_680_p1[15 : 0];
        p_1_reg_1463 <= p_1_fu_610_p3;
        p_s_reg_1458 <= p_s_fu_602_p3;
        relu_en_V_read_reg_1394 <= relu_en_V;
        tmp_10_reg_1448 <= {{W[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_16_reg_1453 <= {{feature_in[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_1_reg_1438 <= {{feature_out[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_5_reg_1443 <= {{bias[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        Wout_V_reg_1519 <= Wout_V_fu_734_p2;
        bound1_reg_1596 <= bound1_fu_807_p2;
        bound4_reg_1591 <= bound4_fu_797_p2;
        bound_reg_1586 <= bound_fu_787_p2;
        exitcond_mid_reg_1601 <= exitcond_mid_fu_813_p2;
        rhs_V_12_cast_reg_1568[15 : 0] <= rhs_V_12_cast_fu_775_p1[15 : 0];
        rhs_V_13_cast_reg_1575[15 : 0] <= rhs_V_13_cast_fu_778_p1[15 : 0];
        rhs_V_14_cast_reg_1580[15 : 0] <= rhs_V_14_cast_fu_781_p1[15 : 0];
        rhs_V_16_cast_reg_1563[7 : 0] <= rhs_V_16_cast_fu_772_p1[7 : 0];
        rhs_V_1_reg_1540[15 : 0] <= rhs_V_1_fu_760_p1[15 : 0];
        rhs_V_2_reg_1558[15 : 0] <= rhs_V_2_fu_769_p1[15 : 0];
        rhs_V_4_cast_reg_1534[15 : 0] <= rhs_V_4_cast_fu_756_p1[15 : 0];
        tmp_10_cast_reg_1499[29 : 0] <= tmp_10_cast_fu_718_p1[29 : 0];
        tmp_14_reg_1547[7 : 0] <= tmp_14_fu_763_p1[7 : 0];
        tmp_15_reg_1553[7 : 0] <= tmp_15_fu_766_p1[7 : 0];
        tmp_16_cast_reg_1504[29 : 0] <= tmp_16_cast_fu_721_p1[29 : 0];
        tmp_17_cast_reg_1509[29 : 0] <= tmp_17_cast_fu_724_p1[29 : 0];
        tmp_21_cast_reg_1514[29 : 0] <= tmp_21_cast_fu_727_p1[29 : 0];
        tmp_9_reg_1524[7 : 0] <= tmp_9_fu_750_p1[7 : 0];
        tmp_s_reg_1529[7 : 0] <= tmp_s_fu_753_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)))) begin
        ap_reg_ppstg_exitcond2_reg_1740_pp0_iter1 <= exitcond2_reg_1740;
        ap_reg_ppstg_exitcond2_reg_1740_pp0_iter2 <= ap_reg_ppstg_exitcond2_reg_1740_pp0_iter1;
        ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3 <= ap_reg_ppstg_exitcond2_reg_1740_pp0_iter2;
        ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4 <= ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3;
        exitcond2_reg_1740 <= exitcond2_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond_flatten_fu_983_p2))) begin
        bias6_sum_reg_1720 <= bias6_sum_fu_1140_p2;
        gmem_addr_1_reg_1725 <= feature_out8_sum_cast_fu_1161_p1;
        indvar_flatten_next8_reg_1735 <= indvar_flatten_next8_fu_1182_p3;
        j_reg_1730 <= j_fu_1171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)))) begin
        cin_reg_1744 <= cin_fu_1194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond_flatten1_fu_831_p2))) begin
        exitcond_flatten2_reg_1619 <= exitcond_flatten2_fu_842_p2;
        exitcond_mid1_reg_1628 <= exitcond_mid1_fu_852_p3;
        i_op_assign_12_mid2_reg_1635 <= i_op_assign_12_mid2_fu_865_p3;
        tmp_24_reg_1641 <= grp_fu_1388_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)) & (1'b0 == exitcond2_fu_1189_p2))) begin
        gmem_addr_2_reg_1749 <= feature_in2_sum9_cast_fu_1214_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
        gmem_addr_3_read_reg_1766 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (exitcond2_reg_1740 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
        gmem_addr_3_reg_1760 <= W4_sum_cast_fu_1252_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        i_op_assign_10_mid2_reg_1673 <= i_op_assign_10_mid2_fu_949_p3;
        i_op_assign_12_cast7_reg_1678[15 : 0] <= i_op_assign_12_cast7_fu_956_p1[15 : 0];
        r_V_10_mid2_reg_1668 <= r_V_10_mid2_fu_942_p3;
        tmp_10_cast_mid2_reg_1656[15 : 0] <= tmp_10_cast_mid2_fu_897_p1[15 : 0];
        tmp_10_mid2_cast_reg_1651[15 : 0] <= tmp_10_mid2_cast_fu_893_p1[15 : 0];
        tmp_10_mid2_v_reg_1646 <= tmp_10_mid2_v_fu_886_p3;
        tmp_21_mid2_reg_1662 <= tmp_21_mid2_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2))) begin
        i_op_assign_13_mid2_reg_1692 <= i_op_assign_13_mid2_fu_999_p3;
        r_V_17_mid2_v_v_v_reg_1697 <= r_V_17_mid2_v_v_v_fu_1046_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        indvar_flatten_next1_reg_1614 <= indvar_flatten_next1_fu_836_p2;
        r_V_10_reg_1606 <= r_V_10_fu_826_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        indvar_flatten_next_reg_1687 <= indvar_flatten_next_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)))) begin
        next_mul_reg_1755 <= next_mul_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
        r_V_12_reg_1710 <= grp_fu_1369_p3;
        tmp1_reg_1715 <= tmp1_fu_1135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345))) | ((1'b1 == ap_sig_cseq_ST_st46_fsm_36) & ~(gmem_RVALID == 1'b0)))) begin
        reg_440 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_37) & ~(1'b0 == ap_sig_ioackin_gmem_AWREADY))) begin
        sum_4_reg_1787 <= sum_4_fu_1324_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond_flatten1_fu_831_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~(1'b0 == exitcond_flatten1_fu_831_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_139) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_61) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_404) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_458) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_480) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_501) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_586) begin
        ap_sig_cseq_ST_st38_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_183) begin
        ap_sig_cseq_ST_st39_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_191) begin
        ap_sig_cseq_ST_st46_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_200) begin
        ap_sig_cseq_ST_st47_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_208) begin
        ap_sig_cseq_ST_st48_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st53_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_AWREADY)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_WREADY)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        if ((1'b1 == ap_sig_cseq_ST_st39_fsm_29)) begin
            gmem_ARADDR = bias6_sum_cast_fu_1267_p1;
        end else if (ap_sig_670) begin
            gmem_ARADDR = gmem_addr_3_reg_1760;
        end else if (ap_sig_659) begin
            gmem_ARADDR = gmem_addr_2_reg_1749;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b0 == ap_reg_ioackin_gmem_ARREADY) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345)) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_29) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_37) & (1'b0 == ap_reg_ioackin_gmem_AWREADY))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_43) & ~(gmem_BVALID == 1'b0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345))) | ((1'b1 == ap_sig_cseq_ST_st46_fsm_36) & ~(gmem_RVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557))))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st48_fsm_38) & (1'b0 == ap_reg_ioackin_gmem_WREADY))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26)) | (1'b1 == ap_sig_cseq_ST_st39_fsm_29))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_37)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st53_fsm_43)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4)) | (1'b1 == ap_sig_cseq_ST_st46_fsm_36))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_38)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_37)) begin
        grp_fu_423_p0 = sum_1_reg_351;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b1 == ap_reg_ppiten_pp0_it5))) begin
        grp_fu_423_p0 = sum_2_reg_396;
    end else begin
        grp_fu_423_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_37)) begin
        grp_fu_423_p1 = reg_440;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & (1'b1 == ap_reg_ppiten_pp0_it5))) begin
        grp_fu_423_p1 = tp_fu_429_p2;
    end else begin
        grp_fu_423_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        grp_fu_662_ap_start = 1'b1;
    end else begin
        grp_fu_662_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        grp_fu_712_ap_start = 1'b1;
    end else begin
        grp_fu_712_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26))) begin
        i_op_assign_phi_fu_378_p4 = cin_reg_1744;
    end else begin
        i_op_assign_phi_fu_378_p4 = i_op_assign_reg_374;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter1))) begin
        r_V_16_phi_fu_389_p4 = next_mul_reg_1755;
    end else begin
        r_V_16_phi_fu_389_p4 = r_V_16_reg_385;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            if (~((1'b0 == grp_fu_662_ap_done) | (1'b0 == grp_fu_712_ap_done))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        end
        ap_ST_st24_fsm_23 : begin
            if (~(1'b0 == exitcond_flatten1_fu_831_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            if (((1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == brmerge_fu_1109_p2) & ~(1'b0 == tmp_33_fu_1123_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_26;
            end else if ((((1'b0 == exitcond_flatten_fu_983_p2) & ~(1'b0 == brmerge_fu_1109_p2)) | ((1'b0 == exitcond_flatten_fu_983_p2) & (1'b0 == tmp_33_fu_1123_p2)))) begin
                ap_NS_fsm = ap_ST_st38_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_29;
            end
        end
        ap_ST_pp0_stg0_fsm_26 : begin
            if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_26;
            end
        end
        ap_ST_pp0_stg1_fsm_27 : begin
            if ((~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~(1'b1 == ap_reg_ppiten_pp0_it3)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_26;
            end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it4) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557)) & ~(1'b1 == ap_reg_ppiten_pp0_it3))) begin
                ap_NS_fsm = ap_ST_st38_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_27;
            end
        end
        ap_ST_st38_fsm_28 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st39_fsm_29 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st40_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_29;
            end
        end
        ap_ST_st40_fsm_30 : begin
            ap_NS_fsm = ap_ST_st41_fsm_31;
        end
        ap_ST_st41_fsm_31 : begin
            ap_NS_fsm = ap_ST_st42_fsm_32;
        end
        ap_ST_st42_fsm_32 : begin
            ap_NS_fsm = ap_ST_st43_fsm_33;
        end
        ap_ST_st43_fsm_33 : begin
            ap_NS_fsm = ap_ST_st44_fsm_34;
        end
        ap_ST_st44_fsm_34 : begin
            ap_NS_fsm = ap_ST_st45_fsm_35;
        end
        ap_ST_st45_fsm_35 : begin
            ap_NS_fsm = ap_ST_st46_fsm_36;
        end
        ap_ST_st46_fsm_36 : begin
            if (~(gmem_RVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st47_fsm_37;
            end else begin
                ap_NS_fsm = ap_ST_st46_fsm_36;
            end
        end
        ap_ST_st47_fsm_37 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_NS_fsm = ap_ST_st48_fsm_38;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_37;
            end
        end
        ap_ST_st48_fsm_38 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_NS_fsm = ap_ST_st49_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_38;
            end
        end
        ap_ST_st49_fsm_39 : begin
            ap_NS_fsm = ap_ST_st50_fsm_40;
        end
        ap_ST_st50_fsm_40 : begin
            ap_NS_fsm = ap_ST_st51_fsm_41;
        end
        ap_ST_st51_fsm_41 : begin
            ap_NS_fsm = ap_ST_st52_fsm_42;
        end
        ap_ST_st52_fsm_42 : begin
            ap_NS_fsm = ap_ST_st53_fsm_43;
        end
        ap_ST_st53_fsm_43 : begin
            if (~(gmem_BVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st53_fsm_43;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W4_sum_cast_fu_1252_p1 = W4_sum_fu_1247_p2;

assign W4_sum_fu_1247_p2 = (tmp_39_cast_cast_fu_1243_p1 + tmp_17_cast_reg_1509);

assign Wout_V_fu_734_p2 = (ap_const_lv16_1 + tmp_21_fu_730_p1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_139 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_183 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_191 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_200 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_208 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_345 = ((1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter3) & (gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_sig_404 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_458 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_480 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_501 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_557 = ((1'b0 == ap_reg_ppstg_exitcond2_reg_1740_pp0_iter4) & (gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_sig_586 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_61 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_659 = ((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_27) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond2_reg_1740 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_557));
end

always @ (*) begin
    ap_sig_670 = ((1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_1740 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_26) & ~((1'b1 == ap_reg_ppiten_pp0_it4) & ap_sig_345));
end

assign bias6_sum_cast_fu_1267_p1 = bias6_sum_reg_1720;

assign bias6_sum_fu_1140_p2 = (tmp_16_cast_reg_1504 + tmp_10_mid2_cast_reg_1651);

assign bound1_fu_807_p0 = bound1_fu_807_p00;

assign bound1_fu_807_p00 = CHout_V_read_reg_1420;

assign bound1_fu_807_p1 = bound1_fu_807_p10;

assign bound1_fu_807_p10 = bound4_fu_797_p2;

assign bound1_fu_807_p2 = (bound1_fu_807_p0 * bound1_fu_807_p1);

assign bound4_fu_797_p0 = bound4_fu_797_p00;

assign bound4_fu_797_p00 = tmp_7_fu_744_p2;

assign bound4_fu_797_p1 = bound4_fu_797_p10;

assign bound4_fu_797_p10 = Wout_V_fu_734_p2;

assign bound4_fu_797_p2 = (bound4_fu_797_p0 * bound4_fu_797_p1);

assign bound_fu_787_p0 = bound_fu_787_p00;

assign bound_fu_787_p00 = Ky_V_read_reg_1409;

assign bound_fu_787_p1 = bound_fu_787_p10;

assign bound_fu_787_p10 = Kx_V_read_reg_1414;

assign bound_fu_787_p2 = (bound_fu_787_p0 * bound_fu_787_p1);

assign brmerge_fu_1109_p2 = (tmp_38_fu_1101_p3 | tmp_31_not_mid2_fu_1078_p3);

assign cin_fu_1194_p2 = (i_op_assign_phi_fu_378_p4 + ap_const_lv16_1);

assign cout_fu_880_p2 = (i_op_assign_s_reg_282 + ap_const_lv16_1);

assign exitcond1_fu_994_p2 = ((i_op_assign_4_reg_363 == Kx_V_read_reg_1414) ? 1'b1 : 1'b0);

assign exitcond2_fu_1189_p2 = ((i_op_assign_phi_fu_378_p4 == CHin_V_read_reg_1431) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_831_p2 = ((indvar_flatten1_reg_271 == bound1_reg_1596) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_842_p2 = ((indvar_flatten7_reg_294 == bound4_reg_1591) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_983_p2 = ((indvar_flatten_reg_329 == bound_reg_1586) ? 1'b1 : 1'b0);

assign exitcond_fu_847_p2 = ((i_op_assign_2_reg_318 == Wout_V_reg_1519) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_852_p3 = ((exitcond_flatten2_fu_842_p2[0:0] === 1'b1) ? exitcond_mid_reg_1601 : exitcond_fu_847_p2);

assign exitcond_mid_fu_813_p2 = ((Wout_V_fu_734_p2 == ap_const_lv16_0) ? 1'b1 : 1'b0);

assign feature_in2_sum9_cast_fu_1214_p1 = $signed(feature_in2_sum9_fu_1209_p2);

assign feature_in2_sum9_fu_1209_p2 = (r_V_15_fu_1204_p2 + tmp_21_cast_reg_1514);

assign feature_out8_sum_cast_fu_1161_p1 = feature_out8_sum_fu_1156_p2;

assign feature_out8_sum_fu_1156_p2 = (tmp_10_cast_reg_1499 + tmp_19_cast_cast_fu_1152_p1);

assign grp_fu_1355_p0 = grp_fu_1355_p00;

assign grp_fu_1355_p00 = i_op_assign_13_mid2_fu_999_p3;

assign grp_fu_1355_p1 = rhs_V_13_cast_reg_1575;

assign grp_fu_1369_p1 = rhs_V_1_reg_1540;

assign grp_fu_1369_p2 = ($signed({{1'b0}, {r_V_12_mid2_fu_1041_p0}}) * $signed(r_V_12_mid2_fu_1041_p1));

assign grp_fu_1376_p0 = rhs_V_14_cast_reg_1580;

assign grp_fu_1376_p1 = i_op_assign_12_cast7_reg_1678;

assign grp_fu_1376_p2 = tmp_10_cast_mid2_reg_1656;

assign grp_fu_1388_p0 = ((tmp_31_fu_859_p2[0:0] === 1'b1) ? ap_const_lv16_0 : i_op_assign_2_reg_318);

assign grp_fu_1388_p1 = tmp_15_reg_1553;

assign grp_fu_1388_p2 = tmp_s_reg_1529;

assign grp_fu_662_p0 = $signed(r_V_4_fu_648_p2);

assign grp_fu_662_p1 = grp_fu_662_p10;

assign grp_fu_662_p10 = Sx_V;

assign grp_fu_712_p0 = $signed(r_V_8_fu_698_p2);

assign grp_fu_712_p1 = grp_fu_712_p10;

assign grp_fu_712_p10 = Sy_V;

assign h_V_fu_963_p2 = (tmp_18_fu_959_p1 + tmp_21_mid2_reg_1662);

assign h_V_mid1_fu_1017_p2 = (tmp_18_mid1_fu_1013_p1 + tmp_21_mid2_reg_1662);

assign h_V_mid2_fu_1022_p3 = ((exitcond1_fu_994_p2[0:0] === 1'b1) ? h_V_mid1_fu_1017_p2 : h_V_fu_963_p2);

assign i_fu_913_p2 = (i_op_assign_10_mid_fu_873_p3 + ap_const_lv16_1);

assign i_op_assign_10_mid2_fu_949_p3 = ((exitcond_mid1_reg_1628[0:0] === 1'b1) ? i_fu_913_p2 : i_op_assign_10_mid_fu_873_p3);

assign i_op_assign_10_mid_fu_873_p3 = ((exitcond_flatten2_reg_1619[0:0] === 1'b1) ? ap_const_lv16_0 : i_op_assign_1_reg_306);

assign i_op_assign_12_cast7_fu_956_p1 = $unsigned(i_op_assign_12_mid2_reg_1635);

assign i_op_assign_12_mid2_fu_865_p3 = ((tmp_31_fu_859_p2[0:0] === 1'b1) ? ap_const_lv16_0 : i_op_assign_2_reg_318);

assign i_op_assign_13_mid2_fu_999_p3 = ((exitcond1_fu_994_p2[0:0] === 1'b1) ? ap_const_lv8_0 : i_op_assign_4_reg_363);

assign ii_fu_1007_p2 = (i_op_assign_3_reg_340 + ap_const_lv8_1);

assign indvar_flatten7_op_fu_1176_p2 = (ap_const_lv32_1 + indvar_flatten7_reg_294);

assign indvar_flatten_next1_fu_836_p2 = (indvar_flatten1_reg_271 + ap_const_lv48_1);

assign indvar_flatten_next8_fu_1182_p3 = ((exitcond_flatten2_reg_1619[0:0] === 1'b1) ? ap_const_lv32_1 : indvar_flatten7_op_fu_1176_p2);

assign indvar_flatten_next_fu_988_p2 = (indvar_flatten_reg_329 + ap_const_lv16_1);

assign j_fu_1171_p2 = ($signed(ap_const_lv16_1) + $signed(i_op_assign_12_mid2_reg_1635));

assign jj_fu_1262_p2 = (i_op_assign_13_mid2_reg_1692 + ap_const_lv8_1);

assign lhs_V_1_cast_fu_544_p1 = Ky_V;

assign lhs_V_2_cast_fu_630_p1 = Win_V;

assign lhs_V_4_cast_fu_680_p1 = Hin_V;

assign lhs_V_7_cast_fu_968_p1 = $signed(h_V_fu_963_p2);

assign lhs_V_7_cast_mid1_fu_1030_p1 = $signed(h_V_mid1_fu_1017_p2);

assign lhs_V_8_cast_fu_1119_p1 = w_V_fu_1090_p2;

assign lhs_V_cast_fu_486_p1 = Kx_V;

assign next_mul_fu_1224_p2 = (rhs_V_14_cast_reg_1580 + r_V_16_phi_fu_389_p4);

assign notlhs_fu_1295_p2 = ((tmp_25_fu_1281_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_1301_p2 = ((tmp_35_fu_1291_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_1_fu_610_p3 = ((mode_V[0:0] === 1'b1) ? pad_y_V_fu_594_p3 : ap_const_lv8_0);

assign p_neg9_fu_504_p2 = (ap_const_lv9_1 - lhs_V_cast_fu_486_p1);

assign p_neg_fu_562_p2 = (ap_const_lv9_1 - lhs_V_1_cast_fu_544_p1);

assign p_s_fu_602_p3 = ((mode_V[0:0] === 1'b1) ? pad_x_V_fu_536_p3 : ap_const_lv8_0);

assign pad_x_V_fu_536_p3 = ((tmp_17_fu_496_p3[0:0] === 1'b1) ? tmp_3_fu_520_p2 : tmp_6_fu_526_p4);

assign pad_y_V_fu_594_p3 = ((tmp_20_fu_554_p3[0:0] === 1'b1) ? tmp_8_fu_578_p2 : tmp_11_fu_584_p4);

assign r_V_10_fu_826_p0 = r_V_10_fu_826_p00;

assign r_V_10_fu_826_p00 = r_V_9_fu_1332_p2;

assign r_V_10_fu_826_p1 = rhs_V_12_cast_reg_1568;

assign r_V_10_fu_826_p2 = (r_V_10_fu_826_p0 * r_V_10_fu_826_p1);

assign r_V_10_mid1_fu_937_p0 = r_V_10_mid1_fu_937_p00;

assign r_V_10_mid1_fu_937_p00 = r_V_9_mid1_fu_1382_p2;

assign r_V_10_mid1_fu_937_p1 = rhs_V_12_cast_reg_1568;

assign r_V_10_mid1_fu_937_p2 = (r_V_10_mid1_fu_937_p0 * r_V_10_mid1_fu_937_p1);

assign r_V_10_mid2_fu_942_p3 = ((exitcond_mid1_reg_1628[0:0] === 1'b1) ? r_V_10_mid1_fu_937_p2 : r_V_10_mid_fu_907_p3);

assign r_V_10_mid_fu_907_p3 = ((exitcond_flatten2_reg_1619[0:0] === 1'b1) ? ap_const_lv48_0 : r_V_10_reg_1606);

assign r_V_12_mid2_fu_1041_p0 = rhs_V_2_reg_1558;

assign r_V_12_mid2_fu_1041_p1 = r_V_12_mid2_v_v_fu_1344_p2;

assign r_V_12_mid2_v_v_fu_1344_p0 = rhs_V_1_reg_1540;

assign r_V_15_fu_1204_p2 = ($signed(rhs_V_11_cast_fu_1200_p1) + $signed(r_V_12_reg_1710));

assign r_V_17_mid2_fu_1350_p0 = rhs_V_1_reg_1540;

assign r_V_17_mid2_fu_1350_p1 = r_V_17_mid2_fu_1350_p10;

assign r_V_17_mid2_fu_1350_p10 = r_V_17_mid2_v_v_fu_1058_p2;

assign r_V_17_mid2_v_v_fu_1058_p0 = rhs_V_16_cast_reg_1563;

assign r_V_17_mid2_v_v_fu_1058_p1 = r_V_17_mid2_v_v_fu_1058_p10;

assign r_V_17_mid2_v_v_fu_1058_p10 = r_V_17_mid2_v_v_v_fu_1046_p3;

assign r_V_17_mid2_v_v_fu_1058_p2 = (r_V_17_mid2_v_v_fu_1058_p0 * r_V_17_mid2_v_v_fu_1058_p1);

assign r_V_17_mid2_v_v_v_fu_1046_p3 = ((exitcond1_fu_994_p2[0:0] === 1'b1) ? ii_fu_1007_p2 : i_op_assign_3_reg_340);

assign r_V_1_fu_548_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_1_cast_fu_544_p1));

assign r_V_2_cast_fu_626_p1 = r_V_2_fu_618_p3;

assign r_V_2_fu_618_p3 = {{p_s_fu_602_p3}, {1'b0}};

assign r_V_3_cast_fu_640_p1 = r_V_3_fu_634_p2;

assign r_V_3_fu_634_p2 = (lhs_V_2_cast_fu_630_p1 + r_V_2_cast_fu_626_p1);

assign r_V_4_fu_648_p2 = (r_V_3_cast_fu_640_p1 - rhs_V_2_cast_fu_644_p1);

assign r_V_5_fu_1319_p2 = (rhs_V_fu_1313_p2 & relu_en_V_read_reg_1394);

assign r_V_6_cast_fu_676_p1 = r_V_6_fu_668_p3;

assign r_V_6_fu_668_p3 = {{p_1_fu_610_p3}, {1'b0}};

assign r_V_7_cast_fu_690_p1 = r_V_7_fu_684_p2;

assign r_V_7_fu_684_p2 = (lhs_V_4_cast_fu_680_p1 + r_V_6_cast_fu_676_p1);

assign r_V_8_fu_698_p2 = (r_V_7_cast_fu_690_p1 - rhs_V_5_cast_fu_694_p1);

assign r_V_9_fu_1332_p0 = r_V_9_fu_1332_p00;

assign r_V_9_fu_1332_p00 = $unsigned(i_op_assign_1_reg_306);

assign r_V_9_fu_1332_p1 = rhs_V_4_cast_reg_1534;

assign r_V_9_mid1_fu_1382_p0 = r_V_9_mid1_fu_1382_p00;

assign r_V_9_mid1_fu_1382_p00 = $unsigned(i_fu_913_p2);

assign r_V_9_mid1_fu_1382_p1 = rhs_V_4_cast_reg_1534;

assign r_V_fu_490_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_cast_fu_486_p1));

assign rev1_fu_1072_p2 = (slt1_fu_1067_p2 ^ 1'b1);

assign rev_fu_977_p2 = (slt_fu_972_p2 ^ 1'b1);

assign rhs_V_11_cast_fu_1200_p1 = i_op_assign_phi_fu_378_p4;

assign rhs_V_12_cast_fu_775_p1 = CHout_V_read_reg_1420;

assign rhs_V_13_cast_fu_778_p1 = CHin_V_read_reg_1431;

assign rhs_V_14_cast_fu_781_p1 = CHout_V_read_reg_1420;

assign rhs_V_16_cast_fu_772_p1 = Kx_V_read_reg_1414;

assign rhs_V_1_fu_760_p1 = CHin_V_read_reg_1431;

assign rhs_V_2_cast_fu_644_p1 = Kx_V;

assign rhs_V_2_fu_769_p1 = Win_V_read_reg_1426;

assign rhs_V_4_cast_fu_756_p1 = Wout_V_fu_734_p2;

assign rhs_V_5_cast_fu_694_p1 = Ky_V;

assign rhs_V_fu_1313_p2 = (tmp_29_fu_1307_p2 & tmp_30_fu_434_p2);

assign slt1_fu_1067_p2 = (($signed(lhs_V_7_cast_mid1_fu_1030_p1) < $signed(lhs_V_4_cast_reg_1483)) ? 1'b1 : 1'b0);

assign slt_fu_972_p2 = (($signed(lhs_V_7_cast_fu_968_p1) < $signed(lhs_V_4_cast_reg_1483)) ? 1'b1 : 1'b0);

assign sum_4_fu_1324_p3 = ((r_V_5_fu_1319_p2[0:0] === 1'b1) ? ap_const_lv32_0 : grp_fu_423_p2);

assign sum_5_to_int_fu_1277_p1 = grp_fu_423_p2;

assign tmp1_fu_1135_p0 = tmp1_fu_1135_p00;

assign tmp1_fu_1135_p00 = grp_fu_1355_p3;

assign tmp1_fu_1135_p1 = rhs_V_12_cast_reg_1568;

assign tmp1_fu_1135_p2 = (tmp1_fu_1135_p0 * tmp1_fu_1135_p1);

assign tmp2_cast_fu_1234_p1 = tmp2_fu_1229_p2;

assign tmp2_fu_1229_p2 = (tmp_10_cast_mid2_reg_1656 + r_V_16_phi_fu_389_p4);

assign tmp3_cast_fu_1144_p1 = grp_fu_1376_p3;

assign tmp_10_cast_fu_718_p1 = tmp_1_reg_1438;

assign tmp_10_cast_mid2_fu_897_p1 = tmp_10_mid2_v_fu_886_p3;

assign tmp_10_mid2_cast_fu_893_p1 = tmp_10_mid2_v_fu_886_p3;

assign tmp_10_mid2_v_fu_886_p3 = ((exitcond_flatten2_reg_1619[0:0] === 1'b1) ? cout_fu_880_p2 : i_op_assign_s_reg_282);

assign tmp_11_fu_584_p4 = {{r_V_1_fu_548_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_14_fu_763_p1 = Sy_V_read_reg_1399;

assign tmp_15_fu_766_p1 = Sx_V_read_reg_1404;

assign tmp_16_cast_fu_721_p1 = tmp_5_reg_1443;

assign tmp_17_cast_fu_724_p1 = tmp_10_reg_1448;

assign tmp_17_fu_496_p3 = r_V_fu_490_p2[ap_const_lv32_8];

assign tmp_18_fu_959_p1 = i_op_assign_3_reg_340;

assign tmp_18_mid1_fu_1013_p1 = ii_fu_1007_p2;

assign tmp_19_cast_cast_fu_1152_p1 = tmp_19_fu_1147_p2;

assign tmp_19_fu_1147_p2 = (r_V_10_mid2_reg_1668 + tmp3_cast_fu_1144_p1);

assign tmp_20_fu_554_p3 = r_V_1_fu_548_p2[ap_const_lv32_8];

assign tmp_20_mid1_fu_1363_p1 = tmp_14_reg_1547;

assign tmp_21_cast_fu_727_p1 = tmp_16_reg_1453;

assign tmp_21_fu_730_p1 = grp_fu_662_p2[15:0];

assign tmp_21_mid227_v_fu_901_p3 = ((exitcond_flatten2_reg_1619[0:0] === 1'b1) ? ap_const_lv16_0 : tmp_34_fu_1338_p2);

assign tmp_21_mid2_fu_932_p2 = (tmp_21_mid2_v_fu_926_p3 - tmp_9_reg_1524);

assign tmp_21_mid2_v_fu_926_p3 = ((exitcond_mid1_reg_1628[0:0] === 1'b1) ? tmp_20_mid1_fu_1363_p2 : tmp_21_mid227_v_fu_901_p3);

assign tmp_25_fu_1281_p4 = {{sum_5_to_int_fu_1277_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_26_fu_740_p1 = grp_fu_712_p2[15:0];

assign tmp_27_fu_1086_p1 = i_op_assign_13_mid2_fu_999_p3;

assign tmp_28_fu_1095_p2 = (w_V_fu_1090_p2 | h_V_mid2_fu_1022_p3);

assign tmp_29_fu_1307_p2 = (notrhs_fu_1301_p2 | notlhs_fu_1295_p2);

assign tmp_2_fu_510_p4 = {{p_neg9_fu_504_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_31_fu_859_p2 = (exitcond_mid1_fu_852_p3 | exitcond_flatten2_fu_842_p2);

assign tmp_31_not_mid2_fu_1078_p3 = ((exitcond1_fu_994_p2[0:0] === 1'b1) ? rev1_fu_1072_p2 : rev_fu_977_p2);

assign tmp_33_fu_1123_p2 = (($signed(lhs_V_8_cast_fu_1119_p1) < $signed(lhs_V_2_cast_reg_1468)) ? 1'b1 : 1'b0);

assign tmp_34_fu_1338_p0 = tmp_14_reg_1547;

assign tmp_35_fu_1291_p1 = sum_5_to_int_fu_1277_p1[22:0];

assign tmp_37_fu_1238_p2 = (tmp1_reg_1715 + tmp2_cast_fu_1234_p1);

assign tmp_38_fu_1101_p3 = tmp_28_fu_1095_p2[ap_const_lv32_F];

assign tmp_39_cast_cast_fu_1243_p1 = tmp_37_fu_1238_p2;

assign tmp_3_fu_520_p2 = (ap_const_lv8_0 - tmp_2_fu_510_p4);

assign tmp_4_fu_568_p4 = {{p_neg_fu_562_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_6_fu_526_p4 = {{r_V_fu_490_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_7_fu_744_p2 = (ap_const_lv16_1 + tmp_26_fu_740_p1);

assign tmp_8_fu_578_p2 = (ap_const_lv8_0 - tmp_4_fu_568_p4);

assign tmp_9_fu_750_p1 = p_1_reg_1463;

assign tmp_s_fu_753_p1 = p_s_reg_1458;

assign w_V_fu_1090_p2 = ($signed(tmp_27_fu_1086_p1) + $signed(tmp_24_reg_1641));

always @ (posedge ap_clk) begin
    lhs_V_2_cast_reg_1468[16] <= 1'b0;
    lhs_V_4_cast_reg_1483[16] <= 1'b0;
    tmp_10_cast_reg_1499[48:30] <= 19'b0000000000000000000;
    tmp_16_cast_reg_1504[30] <= 1'b0;
    tmp_17_cast_reg_1509[48:30] <= 19'b0000000000000000000;
    tmp_21_cast_reg_1514[47:30] <= 18'b000000000000000000;
    tmp_9_reg_1524[15:8] <= 8'b00000000;
    tmp_s_reg_1529[15:8] <= 8'b00000000;
    rhs_V_4_cast_reg_1534[31:16] <= 16'b0000000000000000;
    rhs_V_1_reg_1540[31:16] <= 16'b0000000000000000;
    tmp_14_reg_1547[15:8] <= 8'b00000000;
    tmp_15_reg_1553[15:8] <= 8'b00000000;
    rhs_V_2_reg_1558[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_16_cast_reg_1563[15:8] <= 8'b00000000;
    rhs_V_12_cast_reg_1568[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_13_cast_reg_1575[23:16] <= 8'b00000000;
    rhs_V_14_cast_reg_1580[31:16] <= 16'b0000000000000000;
    tmp_10_mid2_cast_reg_1651[30:16] <= 15'b000000000000000;
    tmp_10_cast_mid2_reg_1656[31:16] <= 16'b0000000000000000;
    i_op_assign_12_cast7_reg_1678[31:16] <= 16'b0000000000000000;
end

endmodule //Conv
