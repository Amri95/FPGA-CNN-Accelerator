

================================================================
== Vivado HLS Report for 'Pool'
================================================================
* Date:           Sat Sep 05 21:47:18 2020

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        pool
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+--------+----------+------------+
    |  Clock | Target | Estimated| Uncertainty|
    +--------+--------+----------+------------+
    |ap_clk  |  100.00|     87.50|       12.50|
    +--------+--------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   20|    ?|   21|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-------+------------+-----------+-----------+---------------------+----------+
        |             |   Latency   |  Iteration |  Initiation Interval  |         Trip        |          |
        |  Loop Name  | min |  max  |   Latency  |  achieved |   target  |        Count        | Pipelined|
        +-------------+-----+-------+------------+-----------+-----------+---------------------+----------+
        |- Loop 1     |    0|      ?| 21 ~ 65046 |          -|          -| 0 ~ 281462092005375 |    no    |
        | + Loop 1.1  |    9|  65034|          10|          1|          1|      0 ~ 65025      |    yes   |
        +-------------+-----+-------+------------+-----------+-----------+---------------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 41
* Pipeline: 1
  Pipeline-0: II = 1, D = 10, States = { 23 24 25 26 27 28 29 30 31 32 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / (!exitcond_flatten1)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / (exitcond_flatten)
	23  / (!exitcond_flatten)
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	21  / true
* FSM state operations: 

 <State 1>: 5.66ns
ST_1: feature_out_read [1/1] 1.00ns
:0  %feature_out_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %feature_out)

ST_1: feature_in_read [1/1] 1.00ns
:1  %feature_in_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %feature_in)

ST_1: mode_V_read [1/1] 1.00ns
:2  %mode_V_read = call i2 @_ssdm_op_Read.s_axilite.i2(i2 %mode_V)

ST_1: Ky_V_read [1/1] 1.00ns
:3  %Ky_V_read = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %Ky_V)

ST_1: Kx_V_read [1/1] 1.00ns
:4  %Kx_V_read = call i8 @_ssdm_op_Read.s_axilite.i8(i8 %Kx_V)

ST_1: Win_V_read [1/1] 1.00ns
:5  %Win_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %Win_V)

ST_1: Hin_V_read [1/1] 1.00ns
:6  %Hin_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %Hin_V)

ST_1: CHin_V_read [1/1] 1.00ns
:7  %CHin_V_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %CHin_V)

ST_1: tmp_1 [1/1] 0.00ns
:8  %tmp_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %feature_out_read, i32 2, i32 31)

ST_1: tmp_7 [1/1] 0.00ns
:10  %tmp_7 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %feature_in_read, i32 2, i32 31)

ST_1: lhs_V [1/1] 0.00ns
:30  %lhs_V = zext i8 %Kx_V_read to i16

ST_1: r_V_14 [20/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_1: rhs_V [1/1] 0.00ns
:32  %rhs_V = zext i8 %Ky_V_read to i16

ST_1: tmp_4 [20/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 2>: 4.66ns
ST_2: r_V_14 [19/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_2: tmp_4 [19/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 3>: 4.66ns
ST_3: r_V_14 [18/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_3: tmp_4 [18/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 4>: 4.66ns
ST_4: r_V_14 [17/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_4: tmp_4 [17/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 5>: 4.66ns
ST_5: r_V_14 [16/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_5: tmp_4 [16/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 6>: 4.66ns
ST_6: r_V_14 [15/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_6: tmp_4 [15/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 7>: 4.66ns
ST_7: r_V_14 [14/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_7: tmp_4 [14/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 8>: 4.66ns
ST_8: r_V_14 [13/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_8: tmp_4 [13/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 9>: 4.66ns
ST_9: r_V_14 [12/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_9: tmp_4 [12/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 10>: 4.66ns
ST_10: r_V_14 [11/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_10: tmp_4 [11/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 11>: 4.66ns
ST_11: r_V_14 [10/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_11: tmp_4 [10/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 12>: 4.66ns
ST_12: r_V_14 [9/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_12: tmp_4 [9/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 13>: 4.66ns
ST_13: r_V_14 [8/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_13: tmp_4 [8/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 14>: 4.66ns
ST_14: r_V_14 [7/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_14: tmp_4 [7/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 15>: 4.66ns
ST_15: r_V_14 [6/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_15: tmp_4 [6/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 16>: 4.66ns
ST_16: r_V_14 [5/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_16: tmp_4 [5/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 17>: 4.66ns
ST_17: r_V_14 [4/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_17: tmp_4 [4/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 18>: 4.66ns
ST_18: r_V_14 [3/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_18: tmp_4 [3/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 19>: 4.66ns
ST_19: r_V_14 [2/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_19: tmp_4 [2/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V


 <State 20>: 28.87ns
ST_20: tmp_7_cast [1/1] 0.00ns
:9  %tmp_7_cast = zext i30 %tmp_1 to i49

ST_20: tmp_32_cast [1/1] 0.00ns
:11  %tmp_32_cast = zext i30 %tmp_7 to i48

ST_20: stg_94 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(float* %gmem), !map !10

ST_20: stg_95 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i16 %CHin_V), !map !15

ST_20: stg_96 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i16 %Hin_V), !map !21

ST_20: stg_97 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i16 %Win_V), !map !25

ST_20: stg_98 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i8 %Kx_V), !map !29

ST_20: stg_99 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i8 %Ky_V), !map !33

ST_20: stg_100 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap(i2 %mode_V), !map !37

ST_20: stg_101 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @Pool_str) nounwind

ST_20: stg_102 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i32 %feature_out, [10 x i8]* @mode1, i32 0, i32 0, i32 0, i64 4294967295, [1 x i8]* @bundle2, [6 x i8]* @p_str2, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1) nounwind

ST_20: stg_103 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(float* %gmem, [6 x i8]* @p_str, i32 0, i32 0, i32 0, i64 4294967295, [1 x i8]* @p_str1, [6 x i8]* @p_str2, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1) nounwind

ST_20: stg_104 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecInterface(i32 %feature_in, [10 x i8]* @mode, i32 0, i32 0, i32 0, i64 4294967295, [1 x i8]* @bundle, [6 x i8]* @p_str2, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1) nounwind

ST_20: stg_105 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface(i16 %Win_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_106 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecInterface(i8 %Kx_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_107 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecInterface(i16 %Hin_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_108 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecInterface(i2 %mode_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_109 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecInterface(i8 %Ky_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_110 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecInterface(i16 %CHin_V, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: stg_111 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1) nounwind

ST_20: r_V_14 [1/20] 4.66ns
:31  %r_V_14 = udiv i16 %Win_V_read, %lhs_V

ST_20: tmp_4 [1/20] 4.66ns
:33  %tmp_4 = udiv i16 %Hin_V_read, %rhs_V

ST_20: rhs_V_1_cast [1/1] 0.00ns
:34  %rhs_V_1_cast = zext i16 %r_V_14 to i32

ST_20: rhs_V_1 [1/1] 0.00ns
:35  %rhs_V_1 = zext i16 %CHin_V_read to i32

ST_20: tmp_6 [1/1] 1.36ns
:36  %tmp_6 = icmp eq i2 %mode_V_read, 0

ST_20: rhs_V_2 [1/1] 0.00ns
:37  %rhs_V_2 = zext i16 %Win_V_read to i48

ST_20: r_V_15 [1/1] 6.38ns
:38  %r_V_15 = mul i16 %lhs_V, %rhs_V

ST_20: tmp_3 [1/1] 0.00ns
:39  %tmp_3 = zext i16 %r_V_15 to i32

ST_20: tmp_s [1/1] 22.49ns
:40  %tmp_s = sitofp i32 %tmp_3 to float

ST_20: rhs_V_2_cast [1/1] 0.00ns
:41  %rhs_V_2_cast = zext i16 %CHin_V_read to i48

ST_20: tmp_9 [1/1] 1.36ns
:42  %tmp_9 = icmp eq i2 %mode_V_read, 1

ST_20: sum [1/1] 0.00ns (grouped into LUT with out node p_sum)
:43  %sum = select i1 %tmp_6, float 0.000000e+00, float 0x4376345780000000

ST_20: tmp_2 [1/1] 0.00ns (grouped into LUT with out node p_sum)
:44  %tmp_2 = or i1 %tmp_6, %tmp_9

ST_20: p_sum [1/1] 1.37ns (out node of the LUT)
:45  %p_sum = select i1 %tmp_2, float %sum, float 0xC376345780000000

ST_20: cast2 [1/1] 0.00ns
:46  %cast2 = zext i16 %tmp_4 to i32

ST_20: bound4 [1/1] 6.38ns
:47  %bound4 = mul i32 %rhs_V_1_cast, %cast2

ST_20: cast [1/1] 0.00ns
:48  %cast = zext i32 %bound4 to i48

ST_20: bound [1/1] 9.30ns
:49  %bound = mul i48 %cast, %rhs_V_2_cast

ST_20: exitcond_mid [1/1] 2.28ns
:50  %exitcond_mid = icmp eq i16 %r_V_14, 0

ST_20: stg_131 [1/1] 1.57ns
:51  br label %.preheader1010


 <State 21>: 15.68ns
ST_21: indvar_flatten1 [1/1] 0.00ns
.preheader1010:0  %indvar_flatten1 = phi i48 [ 0, %0 ], [ %indvar_flatten_next1, %._crit_edge1014 ]

ST_21: op_assign_8 [1/1] 0.00ns
.preheader1010:1  %op_assign_8 = phi i16 [ 0, %0 ], [ %i_op_assign_17_cast6_mid2_v, %._crit_edge1014 ]

ST_21: indvar_flatten6 [1/1] 0.00ns
.preheader1010:2  %indvar_flatten6 = phi i32 [ 0, %0 ], [ %indvar_flatten_next7, %._crit_edge1014 ]

ST_21: i_op_assign_s [1/1] 0.00ns
.preheader1010:3  %i_op_assign_s = phi i16 [ 0, %0 ], [ %i_op_assign_11_mid2, %._crit_edge1014 ]

ST_21: i_op_assign_1 [1/1] 0.00ns
.preheader1010:4  %i_op_assign_1 = phi i16 [ 0, %0 ], [ %j, %._crit_edge1014 ]

ST_21: i_op_assign_13_cast5 [1/1] 0.00ns
.preheader1010:5  %i_op_assign_13_cast5 = zext i16 %i_op_assign_s to i32

ST_21: r_V [1/1] 6.38ns
.preheader1010:6  %r_V = mul i32 %i_op_assign_13_cast5, %rhs_V_1_cast

ST_21: r_V_cast [1/1] 0.00ns
.preheader1010:7  %r_V_cast = zext i32 %r_V to i48

ST_21: r_V_1 [1/1] 9.30ns
.preheader1010:8  %r_V_1 = mul i48 %r_V_cast, %rhs_V_2_cast

ST_21: exitcond_flatten1 [1/1] 2.61ns
.preheader1010:9  %exitcond_flatten1 = icmp eq i48 %indvar_flatten1, %bound

ST_21: indvar_flatten_next1 [1/1] 2.92ns
.preheader1010:10  %indvar_flatten_next1 = add i48 %indvar_flatten1, 1

ST_21: stg_143 [1/1] 0.00ns
.preheader1010:11  br i1 %exitcond_flatten1, label %6, label %.preheader1011.preheader

ST_21: exitcond_flatten2 [1/1] 2.52ns
.preheader1011.preheader:1  %exitcond_flatten2 = icmp eq i32 %indvar_flatten6, %bound4

ST_21: exitcond [1/1] 2.28ns
.preheader1011.preheader:10  %exitcond = icmp eq i16 %i_op_assign_1, %r_V_14

ST_21: exitcond_mid1 [1/1] 1.37ns
.preheader1011.preheader:11  %exitcond_mid1 = select i1 %exitcond_flatten2, i1 %exitcond_mid, i1 %exitcond

ST_21: stg_147 [1/1] 0.00ns
:0  ret void


 <State 22>: 20.38ns
ST_22: empty_7 [1/1] 0.00ns
.preheader1011.preheader:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 281462092005375, i64 0)

ST_22: i_op_assign_11_mid [1/1] 1.37ns
.preheader1011.preheader:2  %i_op_assign_11_mid = select i1 %exitcond_flatten2, i16 0, i16 %i_op_assign_s

ST_22: c [1/1] 1.96ns
.preheader1011.preheader:3  %c = add i16 %op_assign_8, 1

ST_22: i_op_assign_17_cast6_mid2_v [1/1] 1.37ns
.preheader1011.preheader:4  %i_op_assign_17_cast6_mid2_v = select i1 %exitcond_flatten2, i16 %c, i16 %op_assign_8

ST_22: i_op_assign_17_cast6_mid2 [1/1] 0.00ns
.preheader1011.preheader:5  %i_op_assign_17_cast6_mid2 = zext i16 %i_op_assign_17_cast6_mid2_v to i32

ST_22: rhs_V_7_cast_mid2 [1/1] 0.00ns
.preheader1011.preheader:6  %rhs_V_7_cast_mid2 = zext i16 %i_op_assign_17_cast6_mid2_v to i48

ST_22: tmp_11 [1/1] 6.38ns
.preheader1011.preheader:7  %tmp_11 = mul i16 %i_op_assign_s, %rhs_V

ST_22: tmp_1_mid [1/1] 0.00ns (grouped into LUT with out node tmp_1_mid2)
.preheader1011.preheader:8  %tmp_1_mid = select i1 %exitcond_flatten2, i16 0, i16 %tmp_11

ST_22: r_V_1_mid [1/1] 0.00ns (grouped into LUT with out node r_V_1_mid2)
.preheader1011.preheader:9  %r_V_1_mid = select i1 %exitcond_flatten2, i48 0, i48 %r_V_1

ST_22: i [1/1] 1.96ns
.preheader1011.preheader:12  %i = add i16 %i_op_assign_11_mid, 1

ST_22: tmp_12 [1/1] 0.00ns (grouped into LUT with out node i_op_assign_13_mid2)
.preheader1011.preheader:13  %tmp_12 = or i1 %exitcond_mid1, %exitcond_flatten2

ST_22: i_op_assign_13_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1011.preheader:14  %i_op_assign_13_mid2 = select i1 %tmp_12, i16 0, i16 %i_op_assign_1

ST_22: i_op_assign_13_cast5_mid1 [1/1] 0.00ns
.preheader1011.preheader:15  %i_op_assign_13_cast5_mid1 = zext i16 %i to i32

ST_22: r_V_mid1 [1/1] 6.38ns
.preheader1011.preheader:16  %r_V_mid1 = mul i32 %rhs_V_1_cast, %i_op_assign_13_cast5_mid1

ST_22: r_V_cast_mid1 [1/1] 0.00ns
.preheader1011.preheader:17  %r_V_cast_mid1 = zext i32 %r_V_mid1 to i48

ST_22: tmp_1_mid1 [1/1] 6.38ns
.preheader1011.preheader:18  %tmp_1_mid1 = mul i16 %rhs_V, %i

ST_22: tmp_1_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1011.preheader:19  %tmp_1_mid2 = select i1 %exitcond_mid1, i16 %tmp_1_mid1, i16 %tmp_1_mid

ST_22: r_V_1_mid1 [1/1] 9.30ns
.preheader1011.preheader:20  %r_V_1_mid1 = mul i48 %rhs_V_2_cast, %r_V_cast_mid1

ST_22: r_V_1_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1011.preheader:21  %r_V_1_mid2 = select i1 %exitcond_mid1, i48 %r_V_1_mid1, i48 %r_V_1_mid

ST_22: i_op_assign_11_mid2 [1/1] 1.37ns
.preheader1011.preheader:22  %i_op_assign_11_mid2 = select i1 %exitcond_mid1, i16 %i, i16 %i_op_assign_11_mid

ST_22: i_op_assign_15_cast4 [1/1] 0.00ns
.preheader1011.preheader:23  %i_op_assign_15_cast4 = zext i16 %i_op_assign_13_mid2 to i32

ST_22: tmp_5 [1/1] 6.38ns
.preheader1011.preheader:24  %tmp_5 = mul i16 %lhs_V, %i_op_assign_13_mid2

ST_22: stg_170 [1/1] 1.57ns
.preheader1011.preheader:25  br label %.preheader


 <State 23>: 28.45ns
ST_23: indvar_flatten [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i16 [ 0, %.preheader1011.preheader ], [ %indvar_flatten_next, %._crit_edge ]

ST_23: i_op_assign_2 [1/1] 0.00ns
.preheader:1  %i_op_assign_2 = phi i8 [ 0, %.preheader1011.preheader ], [ %r_V_4_mid2_v_v_v_v_v_v, %._crit_edge ]

ST_23: i_op_assign_3 [1/1] 0.00ns
.preheader:3  %i_op_assign_3 = phi i8 [ 0, %.preheader1011.preheader ], [ %jj, %._crit_edge ]

ST_23: exitcond_flatten [1/1] 2.28ns
.preheader:4  %exitcond_flatten = icmp eq i16 %indvar_flatten, %r_V_15

ST_23: indvar_flatten_next [1/1] 1.96ns
.preheader:5  %indvar_flatten_next = add i16 %indvar_flatten, 1

ST_23: exitcond1 [1/1] 2.00ns
.preheader1009:1  %exitcond1 = icmp eq i8 %i_op_assign_3, %Kx_V_read

ST_23: i_op_assign_14_mid2 [1/1] 1.37ns
.preheader1009:2  %i_op_assign_14_mid2 = select i1 %exitcond1, i8 0, i8 %i_op_assign_3

ST_23: ii7 [1/1] 1.72ns
.preheader1009:3  %ii7 = add i8 %i_op_assign_2, 1

ST_23: r_V_4_mid2_v_v_v_v_v_v [1/1] 1.37ns
.preheader1009:4  %r_V_4_mid2_v_v_v_v_v_v = select i1 %exitcond1, i8 %ii7, i8 %i_op_assign_2

ST_23: r_V_4_mid2_v_v_v_v_v [1/1] 0.00ns
.preheader1009:5  %r_V_4_mid2_v_v_v_v_v = zext i8 %r_V_4_mid2_v_v_v_v_v_v to i16

ST_23: r_V_4_mid2_v_v_v_v [1/1] 1.96ns
.preheader1009:6  %r_V_4_mid2_v_v_v_v = add i16 %r_V_4_mid2_v_v_v_v_v, %tmp_1_mid2

ST_23: r_V_4_mid2_v_v_v [1/1] 0.00ns
.preheader1009:7  %r_V_4_mid2_v_v_v = sext i16 %r_V_4_mid2_v_v_v_v to i32

ST_23: r_V_4_mid2_v_v [1/1] 6.38ns
.preheader1009:8  %r_V_4_mid2_v_v = mul i32 %rhs_V_1, %r_V_4_mid2_v_v_v

ST_23: r_V_4_mid2_v [1/1] 0.00ns
.preheader1009:9  %r_V_4_mid2_v = sext i32 %r_V_4_mid2_v_v to i48

ST_23: r_V_4_mid2 [1/1] 9.30ns
.preheader1009:10  %r_V_4_mid2 = mul i48 %r_V_4_mid2_v, %rhs_V_2

ST_23: tmp_10 [1/1] 0.00ns
.preheader1009:13  %tmp_10 = zext i8 %i_op_assign_14_mid2 to i16

ST_23: w_V [1/1] 1.96ns
.preheader1009:14  %w_V = add i16 %tmp_10, %tmp_5

ST_23: lhs_V_3 [1/1] 0.00ns
:0  %lhs_V_3 = sext i16 %w_V to i32

ST_23: r_V_11 [1/1] 3.36ns
:1  %r_V_11 = mul nsw i32 %lhs_V_3, %rhs_V_1

ST_23: rhs_V_11_cast [1/1] 0.00ns
:2  %rhs_V_11_cast = sext i32 %r_V_11 to i48

ST_23: r_V_12 [1/1] 3.02ns
:3  %r_V_12 = add i48 %rhs_V_11_cast, %r_V_4_mid2

ST_23: r_V_13 [1/1] 2.21ns
:4  %r_V_13 = add i48 %rhs_V_7_cast_mid2, %r_V_12

ST_23: feature_in2_sum [1/1] 2.21ns
:5  %feature_in2_sum = add i48 %tmp_32_cast, %r_V_13

ST_23: feature_in2_sum_cast [1/1] 0.00ns
:6  %feature_in2_sum_cast = sext i48 %feature_in2_sum to i64

ST_23: gmem_addr_3 [1/1] 0.00ns
:7  %gmem_addr_3 = getelementptr inbounds float* %gmem, i64 %feature_in2_sum_cast

ST_23: lhs_V_2 [1/1] 0.00ns
:0  %lhs_V_2 = sext i16 %w_V to i32

ST_23: r_V_8 [1/1] 3.36ns
:1  %r_V_8 = mul nsw i32 %lhs_V_2, %rhs_V_1

ST_23: rhs_V_9_cast [1/1] 0.00ns
:2  %rhs_V_9_cast = sext i32 %r_V_8 to i48

ST_23: r_V_9 [1/1] 3.02ns
:3  %r_V_9 = add i48 %rhs_V_9_cast, %r_V_4_mid2

ST_23: r_V_10 [1/1] 2.21ns
:4  %r_V_10 = add i48 %rhs_V_7_cast_mid2, %r_V_9

ST_23: feature_in2_sum5 [1/1] 2.21ns
:5  %feature_in2_sum5 = add i48 %tmp_32_cast, %r_V_10

ST_23: feature_in2_sum5_cast [1/1] 0.00ns
:6  %feature_in2_sum5_cast = sext i48 %feature_in2_sum5 to i64

ST_23: gmem_addr_2 [1/1] 0.00ns
:7  %gmem_addr_2 = getelementptr inbounds float* %gmem, i64 %feature_in2_sum5_cast

ST_23: lhs_V_1 [1/1] 0.00ns
:0  %lhs_V_1 = sext i16 %w_V to i32

ST_23: r_V_5 [1/1] 3.36ns
:1  %r_V_5 = mul nsw i32 %lhs_V_1, %rhs_V_1

ST_23: rhs_V_6_cast [1/1] 0.00ns
:2  %rhs_V_6_cast = sext i32 %r_V_5 to i48

ST_23: r_V_6 [1/1] 3.02ns
:3  %r_V_6 = add i48 %rhs_V_6_cast, %r_V_4_mid2

ST_23: r_V_7 [1/1] 2.21ns
:4  %r_V_7 = add i48 %rhs_V_7_cast_mid2, %r_V_6

ST_23: feature_in2_sum6 [1/1] 2.21ns
:5  %feature_in2_sum6 = add i48 %r_V_7, %tmp_32_cast

ST_23: feature_in2_sum6_cast [1/1] 0.00ns
:6  %feature_in2_sum6_cast = sext i48 %feature_in2_sum6 to i64

ST_23: gmem_addr_1 [1/1] 0.00ns
:7  %gmem_addr_1 = getelementptr inbounds float* %gmem, i64 %feature_in2_sum6_cast

ST_23: jj [1/1] 1.72ns
._crit_edge:2  %jj = add i8 %i_op_assign_14_mid2, 1


 <State 24>: 87.50ns
ST_24: gmem_load_2_req [7/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_24: gmem_load_1_req [7/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_24: gmem_load_req [7/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 25>: 87.50ns
ST_25: gmem_load_2_req [6/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_25: gmem_load_1_req [6/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_25: gmem_load_req [6/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 26>: 87.50ns
ST_26: gmem_load_2_req [5/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_26: gmem_load_1_req [5/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_26: gmem_load_req [5/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 27>: 87.50ns
ST_27: gmem_load_2_req [4/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_27: gmem_load_1_req [4/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_27: gmem_load_req [4/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 28>: 87.50ns
ST_28: gmem_load_2_req [3/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_28: gmem_load_1_req [3/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_28: gmem_load_req [3/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 29>: 87.50ns
ST_29: gmem_load_2_req [2/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_29: gmem_load_1_req [2/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_29: gmem_load_req [2/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 30>: 87.50ns
ST_30: gmem_load_2_req [1/7] 87.50ns
:8  %gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_3, i32 1)

ST_30: gmem_load_1_req [1/7] 87.50ns
:8  %gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_2, i32 1)

ST_30: gmem_load_req [1/7] 87.50ns
:8  %gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %gmem_addr_1, i32 1)


 <State 31>: 87.50ns
ST_31: gmem_addr_3_read [1/1] 87.50ns
:9  %gmem_addr_3_read = call float @_ssdm_op_Read.m_axi.floatP(float* %gmem_addr_3)

ST_31: gmem_addr_2_read [1/1] 87.50ns
:9  %gmem_addr_2_read = call float @_ssdm_op_Read.m_axi.floatP(float* %gmem_addr_2)

ST_31: gmem_addr_1_read [1/1] 87.50ns
:9  %gmem_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %gmem_addr_1)


 <State 32>: 29.79ns
ST_32: sum_3 [1/1] 0.00ns
.preheader:2  %sum_3 = phi float [ %p_sum, %.preheader1011.preheader ], [ %sum_4, %._crit_edge ]

ST_32: stg_238 [1/1] 0.00ns
.preheader:6  br i1 %exitcond_flatten, label %4, label %.preheader1009

ST_32: empty_6 [1/1] 0.00ns
.preheader1009:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 65025, i64 0)

ST_32: tmp [1/1] 0.00ns
.preheader1009:11  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)

ST_32: stg_241 [1/1] 0.00ns
.preheader1009:12  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_32: stg_242 [1/1] 1.88ns
.preheader1009:15  switch i2 %mode_V_read, label %._crit_edge [
    i2 0, label %1
    i2 1, label %2
    i2 -2, label %3
  ]

ST_32: sum_3_to_int7 [1/1] 0.00ns
:10  %sum_3_to_int7 = bitcast float %sum_3 to i32

ST_32: tmp_22 [1/1] 0.00ns
:11  %tmp_22 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %sum_3_to_int7, i32 23, i32 30)

ST_32: tmp_23 [1/1] 0.00ns
:12  %tmp_23 = trunc i32 %sum_3_to_int7 to i23

ST_32: feature_in_load_2_to_int [1/1] 0.00ns
:13  %feature_in_load_2_to_int = bitcast float %gmem_addr_3_read to i32

ST_32: tmp_24 [1/1] 0.00ns
:14  %tmp_24 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %feature_in_load_2_to_int, i32 23, i32 30)

ST_32: tmp_25 [1/1] 0.00ns
:15  %tmp_25 = trunc i32 %feature_in_load_2_to_int to i23

ST_32: notlhs [1/1] 2.00ns
:16  %notlhs = icmp ne i8 %tmp_22, -1

ST_32: notrhs [1/1] 2.39ns
:17  %notrhs = icmp eq i23 %tmp_23, 0

ST_32: tmp_26 [1/1] 0.00ns (grouped into LUT with out node tmp_30)
:18  %tmp_26 = or i1 %notrhs, %notlhs

ST_32: notlhs8 [1/1] 2.00ns
:19  %notlhs8 = icmp ne i8 %tmp_24, -1

ST_32: notrhs9 [1/1] 2.39ns
:20  %notrhs9 = icmp eq i23 %tmp_25, 0

ST_32: tmp_27 [1/1] 0.00ns (grouped into LUT with out node tmp_30)
:21  %tmp_27 = or i1 %notrhs9, %notlhs8

ST_32: tmp_28 [1/1] 0.00ns (grouped into LUT with out node tmp_30)
:22  %tmp_28 = and i1 %tmp_26, %tmp_27

ST_32: tmp_29 [1/1] 6.79ns
:23  %tmp_29 = fcmp ogt float %sum_3, %gmem_addr_3_read

ST_32: tmp_30 [1/1] 1.37ns (out node of the LUT)
:24  %tmp_30 = and i1 %tmp_28, %tmp_29

ST_32: sum_3_feature_in_load_2 [1/1] 1.37ns (out node of the LUT)
:25  %sum_3_feature_in_load_2 = select i1 %tmp_30, float %sum_3, float %gmem_addr_3_read

ST_32: stg_259 [1/1] 1.57ns
:26  br label %._crit_edge

ST_32: sum_3_to_int [1/1] 0.00ns
:10  %sum_3_to_int = bitcast float %sum_3 to i32

ST_32: tmp_13 [1/1] 0.00ns
:11  %tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %sum_3_to_int, i32 23, i32 30)

ST_32: tmp_14 [1/1] 0.00ns
:12  %tmp_14 = trunc i32 %sum_3_to_int to i23

ST_32: feature_in_load_1_to_int [1/1] 0.00ns
:13  %feature_in_load_1_to_int = bitcast float %gmem_addr_2_read to i32

ST_32: tmp_15 [1/1] 0.00ns
:14  %tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %feature_in_load_1_to_int, i32 23, i32 30)

ST_32: tmp_16 [1/1] 0.00ns
:15  %tmp_16 = trunc i32 %feature_in_load_1_to_int to i23

ST_32: notlhs1 [1/1] 2.00ns
:16  %notlhs1 = icmp ne i8 %tmp_13, -1

ST_32: notrhs1 [1/1] 2.39ns
:17  %notrhs1 = icmp eq i23 %tmp_14, 0

ST_32: tmp_17 [1/1] 0.00ns (grouped into LUT with out node tmp_21)
:18  %tmp_17 = or i1 %notrhs1, %notlhs1

ST_32: notlhs2 [1/1] 2.00ns
:19  %notlhs2 = icmp ne i8 %tmp_15, -1

ST_32: notrhs2 [1/1] 2.39ns
:20  %notrhs2 = icmp eq i23 %tmp_16, 0

ST_32: tmp_18 [1/1] 0.00ns (grouped into LUT with out node tmp_21)
:21  %tmp_18 = or i1 %notrhs2, %notlhs2

ST_32: tmp_19 [1/1] 0.00ns (grouped into LUT with out node tmp_21)
:22  %tmp_19 = and i1 %tmp_17, %tmp_18

ST_32: tmp_20 [1/1] 6.79ns
:23  %tmp_20 = fcmp ogt float %sum_3, %gmem_addr_2_read

ST_32: tmp_21 [1/1] 1.37ns (out node of the LUT)
:24  %tmp_21 = and i1 %tmp_19, %tmp_20

ST_32: feature_in_load_1_sum_3 [1/1] 1.37ns (out node of the LUT)
:25  %feature_in_load_1_sum_3 = select i1 %tmp_21, float %gmem_addr_2_read, float %sum_3

ST_32: stg_276 [1/1] 1.57ns
:26  br label %._crit_edge

ST_32: sum_2 [1/1] 28.22ns
:10  %sum_2 = fadd float %sum_3, %gmem_addr_1_read

ST_32: stg_278 [1/1] 1.57ns
:11  br label %._crit_edge

ST_32: sum_4 [1/1] 0.00ns
._crit_edge:0  %sum_4 = phi float [ %sum_2, %1 ], [ %sum_3, %.preheader1009 ], [ %feature_in_load_1_sum_3, %2 ], [ %sum_3_feature_in_load_2, %3 ]

ST_32: empty [1/1] 0.00ns
._crit_edge:1  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)

ST_32: stg_281 [1/1] 0.00ns
._crit_edge:3  br label %.preheader


 <State 33>: 83.91ns
ST_33: stg_282 [1/1] 1.57ns
:0  br i1 %tmp_6, label %5, label %._crit_edge1014

ST_33: sum_1 [2/2] 83.91ns
:0  %sum_1 = fdiv float %sum_3, %tmp_s


 <State 34>: 85.48ns
ST_34: sum_1 [1/2] 83.91ns
:0  %sum_1 = fdiv float %sum_3, %tmp_s

ST_34: stg_285 [1/1] 1.57ns
:1  br label %._crit_edge1014

ST_34: r_V_2 [1/1] 3.36ns
._crit_edge1014:1  %r_V_2 = mul i32 %rhs_V_1, %i_op_assign_15_cast4

ST_34: tmp1 [1/1] 3.02ns
._crit_edge1014:2  %tmp1 = add i32 %i_op_assign_17_cast6_mid2, %r_V_2

ST_34: tmp1_cast [1/1] 0.00ns
._crit_edge1014:3  %tmp1_cast = zext i32 %tmp1 to i48

ST_34: tmp_8 [1/1] 2.92ns
._crit_edge1014:4  %tmp_8 = add i48 %r_V_1_mid2, %tmp1_cast

ST_34: tmp_17_cast_cast [1/1] 0.00ns
._crit_edge1014:5  %tmp_17_cast_cast = zext i48 %tmp_8 to i49

ST_34: feature_out4_sum [1/1] 2.92ns
._crit_edge1014:6  %feature_out4_sum = add i49 %tmp_17_cast_cast, %tmp_7_cast

ST_34: feature_out4_sum_cast [1/1] 0.00ns
._crit_edge1014:7  %feature_out4_sum_cast = zext i49 %feature_out4_sum to i64

ST_34: gmem_addr [1/1] 0.00ns
._crit_edge1014:8  %gmem_addr = getelementptr inbounds float* %gmem, i64 %feature_out4_sum_cast

ST_34: j [1/1] 1.96ns
._crit_edge1014:12  %j = add i16 %i_op_assign_13_mid2, 1

ST_34: indvar_flatten6_op [1/1] 2.44ns
._crit_edge1014:13  %indvar_flatten6_op = add i32 %indvar_flatten6, 1

ST_34: indvar_flatten_next7 [1/1] 1.37ns
._crit_edge1014:14  %indvar_flatten_next7 = select i1 %exitcond_flatten2, i32 1, i32 %indvar_flatten6_op


 <State 35>: 87.50ns
ST_35: sum_5 [1/1] 0.00ns
._crit_edge1014:0  %sum_5 = phi float [ %sum_1, %5 ], [ %sum_3, %4 ]

ST_35: gmem_addr_req [1/1] 87.50ns
._crit_edge1014:9  %gmem_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %gmem_addr, i32 1)


 <State 36>: 87.50ns
ST_36: stg_299 [1/1] 87.50ns
._crit_edge1014:10  call void @_ssdm_op_Write.m_axi.floatP(float* %gmem_addr, float %sum_5, i4 -1)


 <State 37>: 87.50ns
ST_37: gmem_addr_resp [5/5] 87.50ns
._crit_edge1014:11  %gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %gmem_addr)


 <State 38>: 87.50ns
ST_38: gmem_addr_resp [4/5] 87.50ns
._crit_edge1014:11  %gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %gmem_addr)


 <State 39>: 87.50ns
ST_39: gmem_addr_resp [3/5] 87.50ns
._crit_edge1014:11  %gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %gmem_addr)


 <State 40>: 87.50ns
ST_40: gmem_addr_resp [2/5] 87.50ns
._crit_edge1014:11  %gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %gmem_addr)


 <State 41>: 87.50ns
ST_41: gmem_addr_resp [1/5] 87.50ns
._crit_edge1014:11  %gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %gmem_addr)

ST_41: stg_305 [1/1] 0.00ns
._crit_edge1014:15  br label %.preheader1010



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 100ns, clock uncertainty: 12.5ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
